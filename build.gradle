plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.bubbleshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
	maven {url "https://packages.confluent.io/maven" }
}

ext {
	lombokVersion = '1.18.22'
	flywayVersion = '7.15.0'
	mapStructVersion = '1.5.5.Final'
	lombokMapstructBindVersion = '0.2.0'
	querydslVersion = '5.0.0'
	springCloudVersion = '2021.0.3'
	openApiVersion = '1.8.0'
	awsSdkBomVersion = '1.12.529'
	localstackVersion = '0.2.23'
	awsSdkVersion = '2.26.21'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-jpa"
	implementation "org.springframework.boot:spring-boot-starter-webflux"
	implementation "org.springframework.boot:spring-boot-starter-actuator"
	developmentOnly "org.springframework.boot:spring-boot-devtools"

	runtimeOnly 'io.netty:netty-resolver-dns-native-macos:4.1.104.Final:osx-aarch_64'

	// cache
	implementation 'org.springframework.boot:spring-boot-starter-cache'

	implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'

	//redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//lombok
	compileOnly "org.projectlombok:lombok:${lombokVersion}"
	implementation "org.projectlombok:lombok:${lombokVersion}"
	testImplementation "org.projectlombok:lombok:${lombokVersion}"
	annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// configuration
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

	//apache
	implementation 'org.apache.commons:commons-lang3:3.12.0'

	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// mapstruct
	implementation "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindVersion}"

	annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindVersion}"

	implementation "org.mapstruct:mapstruct:${mapStructVersion}"

	//mysql
	implementation 'mysql:mysql-connector-java'
	implementation 'com.h2database:h2'

	//querydsl
	implementation group: 'com.querydsl', name: 'querydsl-jpa', version: querydslVersion
	implementation group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion
	implementation group: 'com.querydsl', name: 'querydsl-core', version: querydslVersion
	annotationProcessor group: 'com.querydsl', name: 'querydsl-apt', version: querydslVersion, classifier: 'jpa'

	//flyway
	implementation "org.flywaydb:flyway-core:${flywayVersion}"

	//mockito
	testImplementation('org.mockito:mockito-inline:4.3.1')

	//open feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

	testImplementation 'org.springframework.cloud:spring-cloud-contract-wiremock'

	//open api
	implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: openApiVersion

	// aws s3
	implementation platform("com.amazonaws:aws-java-sdk-bom:${awsSdkBomVersion}")
	implementation "software.amazon.awssdk:s3:${awsSdkVersion}" // V2, com.amazonaws:aws-java-sdk-s3 = V1
	implementation "cloud.localstack:localstack-utils:${localstackVersion}"
	testImplementation "org.testcontainers:localstack:1.18.0"
	testImplementation "org.testcontainers:junit-jupiter:1.20.1"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	systemProperty 'spring.profiles.active', 'unit-test'
	useJUnitPlatform()
	jvmArgs '-Xshare:off' // JVM 아규먼트 설정
}